# Use a base image of Ubuntu Focal
FROM ubuntu:20.04

# Update package list and install Java and Maven
RUN apt-get update && \
    apt-get install -y software-properties-common && \
    add-apt-repository ppa:openjdk-r/ppa && \
    apt-get update && \
    apt-get install -y openjdk-17-jdk maven git ca-certificates ufw && \
    update-ca-certificates && \
    ufw allow 443/tcp && \
    ufw reload

# Clone the GitHub repository (optional if you have the source code locally)
RUN git clone https://github.com/Alfesito/ISST-Grupo13-NutriApp.git
ENV JAVA_OPTS="-Djavax.net.ssl.trustStore=/ISST-Grupo13-NutriApp/src/main/resources/keystore.p12 -Djavax.net.ssl.trustStorePassword=changeit -Djavax.net.ssl.keyStore=/ISST-Grupo13-NutriApp/src/main/resources/keystore.p12 -Djavax.net.ssl.keyStorePassword=changeit"

# Set the working directory to the cloned repository
WORKDIR /ISST-Grupo13-NutriApp

# Copy the entrypoint script
# COPY entrypoint.sh .

# Make the entrypoint script executable
RUN chmod +x /ISST-Grupo13-NutriApp/kube/entrypoint.sh

# Set the entrypoint
ENTRYPOINT ["/ISST-Grupo13-NutriApp/kube/entrypoint.sh"]

# Expose port 443 (change the number if your application uses a different port)
EXPOSE 443

# Pasos para contruir la imagen un ejecutar el contenedor:
#     $ docker build -t nutri-app .     รณ       $ docker pull alfesito/nutri-app
#     $ docker run -d -p 443:443 alfesito/nutri-app
#     $ docker stop [ID]

# Eliminar la imagen(es importante eliminar todos los contenedores creados, de otra forma puede que de problemas):
